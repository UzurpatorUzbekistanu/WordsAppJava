buildscript {
	ext {
		lombokVersion = '1.18.22'
		spockVersion = '2.4-M4-groovy-4.0'
		springBootVersion = '3.3.2'
		springDependencyManagementVersion = '1.1.6'
		liquidBaseVersion = '4.17.0'
		snakeyamlVersion = '2.0'
		thymeleafVersion = '3.2.2'
		jakartaValidationApi = '3.0.2'
		hibernateValidator = '8.0.0.Final'
		springSession = '1.3.1.RELEASE'
		springSecurity = '6.3.3'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Podstawowe zależności
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.projectlombok:lombok:${lombokVersion}"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Baza danych i Liquibase
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation "org.liquibase:liquibase-core:${liquidBaseVersion}"

	// Walidacja
	implementation "jakarta.validation:jakarta.validation-api:${jakartaValidationApi}"
	implementation "org.hibernate.validator:hibernate-validator:${hibernateValidator}"

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// Servlet API (korzystaj z `jakarta.servlet-api`)
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

	// Testowanie
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation "org.spockframework:spock-spring:${spockVersion}"
}

tasks.named('test') {
	useJUnitPlatform()
}
